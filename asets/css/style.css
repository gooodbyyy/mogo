body {
    /*сбрасываем все отступы в браузерах по умолчанию*/
    margin: 0;
    font-family: 'Montserrat', sans-serif;
    font-size: 15px;
    /*межстрочный отступ*/
    line-height: 1.6;
    color: #333333;
}


/*сбрасываем все предустановки браузеров по падингам и марджинам для всех элементов, а также для псевдоэлементов*/

*,
*:before,
*:after {
    box-sizing: border-box;
}


/*у заголовков всегда есть отступы. Если не использовать специальный файл normalize.css то нужно не забыть сбросить их вручную*/

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0;
}

hr {
    display: block;
    width: 100%;
    height: 1px;
    border: 0;
    margin: 40px 0;
    background-color: #e5e5e5;
}


/*делаем контейнер для первого окна intro с заданной шириной. Марджин с нулевым отступом сверху/снизу и автоотступами по бокам для выравнивания содержимого по центру*/

.container {
    width: 100%;
    max-width: 1230px;
    margin: 0 auto;
    /*прописываем паддинги для того, чтобы на экранах меньших 1200 пикселей содержимое контейнера не прилегало вплотную к краям экрана. Некрасиво. Т.к. педдинги необходимо прибавить к ширине экрана, то общая ширина получится не 1200, а 1230 пикселей, см. выше*/
    padding: 0 15px;
}


/*intro*/

.intro {
    /*делаем первое окно велиечиной во весь экран картинку-фон в окне устанавливаем по центру и растягиваем на ширину экрана с помощью background-size: cover,-webkit- используем для браузеров, которые не поддерживают такой режим напрямую */
    width: 100%;
    height: 100vh;
    background: url(../img/picture.png) center no-repeat;
    -webkit-background-size: cover;
    background-size: cover;
    /*Таким образом мы выстроили .intro_suptitle и .intro_title в колонку и отодвинули их от меню навигации и друг от друга. Сделать это надо было именно в div intro, в который вложен div container, содержащий оба наших заголовка */
    display: flex;
    flex-direction: column;
    /*Для того, чтобы слайдер (тот, что ниже кнопки) располагался относительно данного блока*/
    justify-content: center;
    position: relative;
    /*это для того, чтобы на малых экранах, кнопки не подскакивали и не перекрывали другие элементы*/
    min-height: 800px;
}

.intro_inner {
    width: 100%;
    max-width: 880px;
    margin: 0 auto;
    text-align: center;
}

.intro_suptitle {
    margin-bottom: 20px;
    font-family: 'Kaushan Script', cursive;
    font-size: 72px;
    color: white;
}

.intro_title {
    color: white;
    font-size: 150px;
    font-weight: 700;
    text-transform: uppercase;
    line-height: 1;
}


/*Это полоска после заголовка h1*/

.intro_title:after {
    content: "";
    display: block;
    width: 60px;
    height: 3px;
    background-color: white;
    margin: 60px auto;
}


/*Header*/

.header {
    /*это блок (полоса сверху), где расположен гамбургер*/
    width: 100%;
    padding-top: 30px;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
}

.header.fixed {
    /*можно написать .header--fixed (с традиционным модификатором), а можно .header.fixed (так легче будет использовать его в JS)*/
    /*здесь прописываем стили для трех полосок гамбургера*/
    padding: 10px 0;
    background-color: #eb8b8d;
    /*делаем тень*/
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    /*transform: translate3d(0 0 0) делаем для того, чтобы наше меню не дергалось при скроле*/
    transform: translate3d(0 0 0);
}

.header.active {
    background-color: #eb8b8d;
}

.header_inner {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header_logo {
    font-size: 30px;
    font-weight: 700;
    color: white;
}


/*Nav*/

.nav {
    font-size: 14px;
    text-transform: uppercase;
}


/*В линках мы убрали подчеркивание ссылки через text-decoration: none и задали замедление смены цвета ссылки при наведении мыши с помощью transition: 0.2s linear;*/

.nav_link {
    display: inline-block;
    vertical-align: top;
    margin: 0 15px;
    color: white;
    text-decoration: none;
    transition: 0.1s linear;
    position: relative;
}


/*при клике мышкой возникает подчеркивание. Т.к. подчеркивание выравниваем относительно родительского элемента .nav_link то здесь ставим position: absolute; а в родительском элементе position: relative; opacity: 0; прописываем для того, чтобы подчеркиваний не было видно пока мышка не наведется на ссылку (они скрываются нулевой прозрачностью), а затем transition: opacity 0.1s linear; - это замедление, чтобы подчеркивание не возникало/исчезало слишком резко.*/

.nav_link:after {
    content: "";
    display: block;
    width: 100%;
    height: 3px;
    background-color: #fce38a;
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.1s linear;
}


/*при наведении мыши цвет ссылки меняется*/

.nav_link:hover {
    color: #fce38a;
}


/*Интересная конструкция, одновременно :hover:after, при наведении мыши и при клике, возникает подчеркивание благодаря исчезновению прозрачности, через opacity: 1; */

.nav_link:hover:after {
    opacity: 1;
}


/*HAMBURGER MENU*/


/*это бургер меню*/

.nav_toggle {
    /*по умолчанию гамбургер невидим и показывается только при прописывании в медиа на малых экранах*/
    display: none;
    width: 30px;
    padding: 0 10px;
    position: absolute;
    top: 24px;
    right: 24px;
    z-index: 1;
    /*поскольку это кнопка, то делаем невидимыми шрифты и убираем все предустановленные для кнопки стили*/
    font-size: 0;
    color: transparent;
    border: 0;
    background: none;
    cursor: pointer;
}

.nav_toggle:focus {
    /*при клике (focus) исчезают бордеры с 4-х сторон, за счет outline: 0*/
    outline: 0;
}

.nav_toggle_item {
    /* это линия, при нажатии на которую развернется гамбургер. Без display: block меню будет не видно*/
    display: block;
    width: 100%;
    height: 3px;
    background-color: white;
    /*позиционируем этот элемент абсолютно относительно .nav_toggle и находится по центру своего контейнера*/
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    /*прописываем трансишн этому элементу, чтобы все выдвигалось/задвигалось плавно*/
    transition: background 0.2s linear;
}

.nav_toggle.active .nav_toggle_item {
    /*если элемент .nav_toggle активен тогда в .nav_toggle_item бекграунд исчезает,
т.е. в гамбургере пропадает средняя полоска, а верхнюю и нижнюю мы трансформируем позже в крестик */
    background: none;
}

.nav_toggle_item:before,
.nav_toggle_item:after {
    content: "";
    width: 100%;
    height: 3px;
    background-color: white;
    position: absolute;
    left: 0;
    z-index: 1;
    /*Чтобы трансформация, описанная выше (превращение гамбургера в крестик и наоборот) была плавной прописываем для этого элемента transition*/
    transition: transform 0.2s linear;
}

.nav_toggle_item:before {
    top: -8px;
}

.nav_toggle_item:after {
    bottom: -8px;
}

.nav_toggle.active .nav_toggle_item:before {
    /*меняем точку трансформации на левую верхнюю точку, чтобы крестик был с ровными сторонами*/
    transform-origin: left top;
    /*делаем одну половинку крестика*/
    transform: rotate(45deg) translate3d(0px, -2px, 0);
}

.nav_toggle.active .nav_toggle_item:after {
    /*меняем точку трансформации на левую верхнюю точку*/
    transform-origin: left bottom;
    /*делаем вторую половинку крестика*/
    transform: rotate(-45deg) translate3d(0px, 3px, 0);
}


/*Button*/

.btn {
    display: inline-block;
    vertical-align: top;
    border: 3px solid white;
    padding: 8px 30px;
    color: white;
    text-transform: uppercase;
    font-size: 14;
    font-weight: 700;
    text-decoration: none;
    /*Добавляем плавности в смену цветов при наведении и убирании мыши*/
    transition: background 0.1s linear, color 0.1s linear;
}

.btn:hover {
    background-color: white;
    color: black;
}


/*Slider*/

.slider {
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 1;
}

.slider_inner {
    display: flex;
    justify-content: space-between;
}

.slider_item {
    width: 23%;
    padding: 20px 0;
    position: relative;
    border-top: 3px solid white;
    font-size: 18px;
    color: white;
    text-transform: uppercase;
    opacity: 0.7;
}

.slider_item.active {
    opacity: 1;
}

.slider_item.active:before {
    content: "";
    display: block;
    width: 70px;
    height: 3px;
    position: absolute;
    top: -3px;
    left: 0;
    z-index: 1;
    background-color: #f38181;
}

.slider_number {
    font-size: 24px;
    font-weight: 700;
}


/*Section*/

.section {
    padding: 80px 0;
    /*для адаптивной верстки на телефонах, все что не помещается на экран(здесь широкая картинка), обрежется чтобы не было горизонтальной полосы прокрутки*/
    overflow: hidden;
}

.section--devices {
    background: url(../img/Unique_design/Layer\ 45.png) center no-repeat;
    -webkit-background-size: cover;
    background-size: cover;
    /*padding-bottom: 0 для того, чтобы картинка планшета и телефона прижалась книзу, несмотря на то, что для блока .section прописан нижний паддинг*/
    padding-bottom: 0;
    /*margin-bottom:40px прописываем, чтобы сделать отступ снизу чуть больше,  т.к., из-за того, что телефон немного вылазит внизу, кажется, что отступа не хватает*/
    margin-bottom: 40px;
}

.section--gray {
    background-color: #f8f8f8;
}

.section--clients {
    background: #f5f5f5 url("../img/clients/Layer\ 53.png") center no-repeat;
    -webkit-background-size: cover;
    background-size: cover;
}

.section--map {
    padding: 40px;
    background: #e6e6e6 url(../img/map/Layer\ 59.png) center no-repeat;
    -webkit-background-size: cover;
    background-size: cover;
}

.section_header {
    margin: 0 auto 50px;
    width: 100%;
    max-width: 950px;
    text-align: center;
}

.section_suptitle {
    font-family: "Kaushan script", cursive;
    font-size: 24px;
    color: #333;
}

.section_title {
    font-size: 30px;
    font-weight: 700;
    color: #333;
    text-transform: uppercase;
}

.section_title:after {
    content: "";
    display: block;
    width: 60px;
    height: 3px;
    background-color: #f38181;
    margin: 30px auto;
}

.section_text {
    font-family: 'Roboto', sans-serif;
    font-size: 15px;
    font-weight: 400;
    color: #999
}


/*Card*/

.card {
    /*т.к. мы прописали для контейнера паддинги по 15рх, а .card_item у нас будут занимать каждая по 33,3% то, чтобы рисунки умещались, сделаем для них отрицательные марджины -15рх*/
    margin-top: 80px -15px;
    display: flex;
    justify-content: space-between;
    /*перенос картинок для адаптивной верстки на малых экранах*/
    flex-wrap: wrap;
}

.card_item {
    width: 33.3333%;
    padding: 0 15px;
}

.card_inner {
    /*Делаем зеленый фон элементу,чтобы при нажатии мыши картинка сдвигалась вверх и влево, а фон оставался*/
    background-color: #95e1d3;
    /*делаем позицию relative (зависимой) от элемента .card_text, которому прописываем position: absolute, для того, чтобы картинка .about_img и наложеный текст не вылазили за границы блока*/
    position: relative;
}


/*Делаем сдвиг влево и вверх для картинок при наведении мыши*/

.card_inner:hover .card_img {
    transform: translate3d(-10px, -10px, 0);
}


/*Делаем затемнение для картинок при наведении мыши*/

.card_inner:hover .card_img img {
    opacity: 0.1;
}


/*Делаем текст на картинке видимым при наведении мыши*/

.card_inner:hover .card_text {
    opacity: 1;
}


/*Делаем градиент для картинок при наведении мыши*/

.card_img {
    background: linear-gradient(to bottom, #f38381, #fce28a);
    /*Делаем сдвиг картинки при наведении мыши более плавным*/
    transition: transform 0.2s linear;
}

.card_img img {
    /*усли не прописать  display: block, то снизу картинки будет проглядывать 1-2 мм градиента */
    display: block;
    transition: opacity 0.1s linear;
    /*прописываем ширину блока 100%, чтобы рисунки не выходили за пределы блока, высоту автоматически подгоняем под ширину*/
    max-width: 100%;
    height: auto;
}

.card_text {
    width: 100%;
    font-size: 18px;
    color: white;
    text-transform: uppercase;
    font-weight: 700;
    text-align: center;
    /*текст скрыт(прозрачность нулевая), пока не наведется мышь*/
    opacity: 0;
    /*делаем позицию absolute (независимой) от элемента .card_inner, которому прописываем position: relative, для того, чтобы картинка .card_img и наложеный текст не вылазили за границы блока*/
    position: absolute;
    /*Выравниваем этот блок по центру*/
    top: 50%;
    left: 0;
    z-index: 2;
    transform: translate3d(0, -50%, 0);
    transition: opacity 0.2s linear;
}

.card_info {
    margin-top: 20px;
    text-align: center;
}

.card_name {
    margin-bottom: 5px;
    text-transform: uppercase;
    font-family: 'Montserrat', sans-serif;
    color: black;
    font-size: 14px;
}

.card_prof {
    color: #999;
    font-family: 'Roboto', sans-serif;
    font-size: 15px;
    font-style: italic;
    font-weight: 300;
}


/*Statistics*/

.statistics {
    background-color: #95e1d3;
}

.stat {
    display: flex;
    /*прописываем, чтобы картинки перескакивали на следующую строку при уменьшении дизайна при адаптивной верстке*/
    flex-wrap: wrap;
}

.stat_item {
    /*делаем все колонки одинаковой ширины*/
    flex: 1 1 0;
    padding: 70px 25px;
    border-left: 1px solid #b5eae0;
    text-align: center;
    color: white;
}


/*делаем для последнего дочернего элемента  блока .stat, бордер справа*/

.stat_item:last-child {
    border-right: 1px solid #b5eae0;
}

.stat_count {
    margin-bottom: 10px;
    font-size: 72px;
    font-weight: 700;
    line-height: 1;
}

.stat_text {
    font-size: 14px;
    text-transform: uppercase;
}


/*Services*/

.services {
    display: flex;
    /*разрешаем элементам переноситься на следующую строку, после того, как они заполнили предыдущую, см. ниже*/
    flex-wrap: wrap;
}

.services_item {
    /*делаем все колонки одинаковой ширины, по 3 в ряд на стандартной ширине экрана*/
    width: 33.3333%;
    padding: 0 35px 40px 85px;
    /*делаем этот див position: relative, поскольку иконку в нем собираемся сделать absolute*/
    position: relative;
    margin-bottom: 40px;
}

.services_item--border {
    border-bottom: 1px solid #e5e5e5;
}

.services_icon {
    position: absolute;
    top: 0;
    left: 30px;
    z-index: 1;
}

.services_title {
    margin-bottom: 10px;
    font-size: 14px;
    color: black;
    text-transform: uppercase;
}

.services_text {
    font-family: 'Roboto', sans-serif;
    font-size: 15px;
    color: #999;
}


/*Devices*/

.devices {
    width: 100%;
    max-width: 600px;
    /*с помощью margin: 0 auto мы выравниваем элементы по центру */
    margin: 0 auto;
    position: relative;
}

.devices_item {
    display: block;
    /*макс ширина и автовысота нужны для адаптивной верстки под малые экраны*/
    max-width: 100%;
    height: auto;
}

.devices_item--iphone {
    position: absolute;
    bottom: -80px;
    right: 0;
    z-index: 1;
}


/*We do*/


/*У родительского элемента делаем отрицательный марджин, а у дочернего, на такую же величину положительный педдинг слева и справа. Таким образом элементы правильно разместятся в контейнере при адаптивной верстке на малых экранах */

.wedo {
    display: flex;
    margin: 0 -15px;
    /*Делаем для того, чтобы на малых экранах элементы этого блока становились друг под другом*/
    flex-wrap: wrap;
}

.wedo_item {
    width: 50%;
    padding: 0 15px;
}

.wedo_img {
    /*Все, что ниже прописывается для адаптивной верстки на малые экраны*/
    display: block;
    max-width: 100%;
    height: auto;
}


/*Accordion*/

.accordion_item {
    border: 1px solid #e5e5e5;
    margin-bottom: 10px;
}

.accordion_item.active .accordion_content {
    display: block;
}

.accordion_item.active .accordion_header:after {
    border-bottom-color: #e5e5e5;
}

.accordion_item.active .accordion_header:after {
    /*стрелка в открытом положении смотрит вверх*/
    transform: translateY(-50%) rotate(-45deg);
    margin-top: 5px;
}

.accordion_header {
    border-bottom: 1px solid transparent;
    padding: 15px 20px 15px 60px;
    /*прописываем элементу  position: relative, чтобы относительно него выровнять иконку с позицией абсолют*/
    position: relative;
    /*курсор в виде руки*/
    cursor: pointer;
}


/*Сделаем в аккордеонестрелочку вверх вручную, не прибегая к вставке картинки*/

.accordion_header:after {
    content: "";
    display: block;
    width: 16px;
    height: 16px;
    border-top: 2px solid #ccc;
    border-right: 2px solid #ccc;
    position: absolute;
    top: 50%;
    right: 20px;
    z-index: 1;
    /*стрелка в открытом положении смотрит вниз из-за rotate(135deg)*/
    transform: translateY(-50%) rotate(135deg);
}

.accordion_icon {
    position: absolute;
    /* Один из способов выравнивания по вертикали через top: 50% и transform: translateY(-50%);*/
    top: 50%;
    left: 20px;
    z-index: 1;
    transform: translateY(-50%);
}

.accordion_content {
    padding: 15px 20px;
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 15px;
    color: #999;
    /*контент по умолчанию скрыт и открывается лишь при нажатии на стрелку*/
    display: none;
}

.accordion_title {
    font-size: 14px;
    color: black;
    text-transform: uppercase;
}


/*Reviews*/

.reviews {
    position: relative;
}


/*задаем стили для элемента .slick-slider в блоке .reviews*/

.reviews .slick-slider {
    padding: 0 110px;
}

.reviews_item {
    /*задаем слайдеру минимальную высоту, чтобы картинка в нем поместилась целиком*/
    min-height: 210px;
    padding-left: 205px;
    position: relative;
}

.reviews_photo {
    /*display: block; позволит нам при адаптивной верстке на малых экранах отцентровать фото, т.к. сделает его блочным элементом*/
    display: block;
    width: 150px;
    height: 150px;
    border: 3px solid #95e1d3;
    padding: 20px;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 0;
    z-index: 1;
}

.reviews_text {
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 24px;
    color: #999;
    margin-bottom: 15px;
}

.reviews_autor {
    font-family: 'Kaushan script', cursive;
    font-size: 24px;
    color: black;
}

.reviews_autor:before {
    content: "";
    display: inline-block;
    vertical-align: middle;
    width: 60px;
    height: 3px;
    background-color: #f38181;
    margin-right: 10px;
}

.slick-arrow {
    display: block;
    /* font-size: 0; color: transparent скрывают наши ссылки (написаные словами Previous b Next, которые мы используем для удобства программирования)*/
    font-size: 0;
    color: transparent;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1;
    /*убираем заданные по умолчанию стили в кнопках .slick-arrow*/
    border: 0;
    background: none;
    cursor: pointer;
}

.slick-arrow:focus {
    /*убираем те подчеркивания и линии которые есть у стрелок слайдера slick по умолчанию*/
    outline: 0;
}

.slick-arrow:after {
    content: "";
    display: block;
    width: 16px;
    height: 16px;
    border-top: 2px solid #ccc;
    border-left: 2px solid #ccc;
}


/*это левые кнопки слайдера*/

.slick-prev {
    left: 0;
    /*стрелка в открытом положении смотрит влево из-за rotate(45deg)*/
    transform: rotate(-45deg);
}


/*это правые кнопки слайдера*/

.slick-next {
    right: 0;
    /*стрелка в открытом положении смотрит вправо из-за rotate(135deg)*/
    transform: rotate(135deg);
}


/*Social*/

.social {
    display: flex;
    align-items: center;
    justify-content: center;
}

.social_item {
    width: 55px;
    height: 55px;
    padding: 10px;
    background-color: hsl(47, 95%, 76%);
    border-right: 1px solid #f38181;
    text-decoration: none;
    color: #f38181;
    /*увеличиваем размер иконок, которые вставляем через ссылку на сайт*/
    font-size: 40px;
    line-height: 1;
    transition: background 0.2s linear, color 0.2s linear;
}

.social_item:last-child {
    border-right: 0;
}

.social_item:hover {
    background-color: #f38181;
    color: white;
}


/*Logos*/

.logos {
    display: flex;
    justify-content: space-between;
    align-items: center;
    /*центрируем содержимое блока .logos за счет марджинов здесь ипедингов в блоке .logos_item*/
    margin: 0 -15px;
}

.logos_item {
    padding: 0 15px;
}

.logos_img {
    /*мы центрируем картинку в блоке только для адаптивной верстки намалых экранах. Когда мы сделаем картинки, которые будут перескакивать на следующую строку, то размер блоков будет меняться*/
    display: block;
    max-width: 100%;
    height: auto;
}


/*Works*/

.works {
    display: flex;
}

.works_col {
    /*все 4 колонки одинаковые по ширине*/
    flex: 1 1 0;
}

.works_item {
    position: relative;
    /*прописываем градиент, который наложится на картинку при клике на нее*/
    background: linear-gradient(to bottom, #f38181, #fce38a);
}


/*предполагается что при наведении мыши на .works_item:hover элемент .works_image увеличит прозрачность картинки, и проявится градиент, являющийся подложкой*/

.works_item:hover .works_image {
    opacity: 0.1;
}

.works_item:hover .works_info {
    opacity: 1;
}

.works_image {
    /*при наведении мыши прозрачность картинки уменьшается в течение 0,1 сек*/
    transition: opacity 0.2s linear;
    /*прописываем display: block, чтобы слой с градиентом наложился под картинку без сдвигов и отступов*/
    display: block;
    /*т.к. картинки очень большие, то появляется горизонтальная полоса прокрутки. Убираем ее за счет max-width: 100%;height: auto; таким образом подогнав картинки под ширину экрана.*/
    max-width: 100%;
    height: auto;
}

.works_info {
    /*выравниваем этот блок по центру по вертикали*/
    width: 100%;
    padding: 0 15px;
    position: absolute;
    top: 50%;
    left: 0;
    z-index: 1;
    transform: translate3d(0, -50%);
    text-align: center;
    color: white;
    /*скрываем блок .works_info и замедляем это на 0,2 сек, а при наводе на .works_item:hover сделаем видимым блок .works_info (см. выше)*/
    opacity: 0;
    transition: opacity 0.2s linear;
}

.works_title {
    margin-bottom: 5px;
    font-family: 'Montserrat', sans-serif;
    font-size: 14px;
    text-transform: uppercase;
}

.works_text {
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 15px;
}


/*Clients*/

.clients {
    margin-top: 70px;
    display: flex;
    /*чтобы колонки перепрыгивали на другую строку, т.к. наша матрица - 2 ряда по 2 штуки*/
    flex-wrap: wrap;
}


/*один из способов сделать каждый блок шириной в пол контейнера. Таким образом 4 блока расположатся в 2 ряда по 2 штуки*/

.clients_item {
    width: 50%;
    padding: 0 45px 0 125px;
    position: relative;
    margin-bottom: 60px;
}

.clients_photo {
    position: absolute;
    top: 0;
    left: 40px;
    z-index: 1;
}

.clients_content {
    margin-left: 50px;
}

.clients_name {
    margin-bottom: 5px;
    color: black;
    font-size: 14px;
    text-transform: uppercase;
}

.clients_prof {
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 15px;
    color: black;
}

.clients_text {
    font-family: 'Roboto', sans-serif;
    font-size: 15px;
    color: #999;
}

.clients_text:before {
    margin: 15px 0;
    content: " ";
    display: block;
    width: 60px;
    height: 3px;
    background-color: #f38181;
}


/*Blog*/

.blog {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

.blog_item {
    width: 31%;
}

.blog_header {
    /*прописываем здесь position: relative, поскольку относительно этого блока будем размещать .blog_date в position: absolute*/
    position: relative;
    margin-bottom: 10px;
}

.blog_photo {
    /*прописываем картинку так, чтобы она при любом размере экрана не выходила за пределы блока*/
    display: inline-block;
    max-width: 100%;
    height: auto;
}

.blog_date {
    text-align: center;
    padding: 10px 20px;
    /*сдвигаем дату относительно картинки*/
    background-color: #95e1d3;
    color: white;
    font-size: 15px;
    font-style: italic;
    font-weight: 300;
    position: absolute;
    bottom: 10px;
    left: -10px;
    z-index: 1;
}

.blog_day {
    font-size: 30px;
    font-weight: 700;
    font-style: normal;
    line-height: 1;
}

.blog_content {
    margin-bottom: 10px;
}

.blog_title {
    margin-bottom: 14px;
    font-size: 14px;
    color: #333;
    text-transform: uppercase;
}


/*т.к. ссылка принимает при нажатии цвет, заданный браузером по умолчанию, а нам нужен цвет 333, то прописываем color: inherit, тогда ссылка возьмет цвет родителя, т.е. .blog_title*/

.blog_title a {
    color: inherit;
    text-decoration: none;
}


/*хотя мы и убрали в предыдущем стиле подчеркивание ссылки. но при наведении мыши она должна выглядеть, как ссылка. Потому отдельно прописываем это*/

.blog_title a:hover {
    text-decoration: underline;
}

.blog_text {
    font-family: 'Roboto', sans-serif;
    font-size: 15px;
    color: #999;
}

.blog_footer {
    border-top: 1px solid #e5e5e5;
    padding-top: 14px;
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 15px;
    color: #999;
}

.blog_stat_item {
    display: inline-block;
    vertical-align: top;
    margin-right: 10px;
}

.blog_stat_item i {
    color: #95e1d3;
}


/*Map*/

.map {
    text-align: center;
}

.map_title {
    font-size: 24px;
    font-weight: bold;
    color: #f38181;
    text-transform: uppercase;
}

.map_title:after {
    content: "";
    display: block;
    width: 60px;
    height: 3px;
    margin: 15px auto 0;
    background-color: #f38181;
}

.map_title a {
    /*задаем цвет ссылки, как у родительского элемента*/
    color: inherit;
    text-decoration: none;
}

.map_title a:hover {
    /*при наведении на ссылку возникает подчеркивание*/
    text-decoration: underline;
}


/*Footer*/

.footer {
    padding-top: 65px;
    background-color: #f8f8f8;
}

.footer_inner {
    /*прописывая отрицательный мерджин в родительском блоке и такой же положительный паддинг во вложенном, мы избегаем дополнительных марджинов у первой и последней колонки */
    margin: 0 -15px;
    display: flex;
    justify-content: space-between;
    padding-bottom: 65px;
    /*это сделано чтобы при адаптивной верстке на малых экранах элементы внутри этого блока переносились один под другой*/
    flex-wrap: wrap;
}

.footer_col {
    padding: 0 15px;
}

.footer_col--first {
    width: 40%;
}

.footer_col--second {
    width: 29%;
}

.footer_col--third {
    width: 22%;
}

.footer_logo {
    margin-bottom: 30px;
    font-size: 46px;
    font-weight: 700;
    color: #ccc;
}

.footer_text {
    margin-bottom: 30px;
    font-family: 'Roboto', sans-serif;
    font-weight: 400;
    font-size: 15px;
    color: #999;
}

.footer_social {
    margin-bottom: 25px;
}

.footer_social_header {
    padding-bottom: 15px;
    font-size: 14px;
    color: black;
    border-bottom: 1px solid #e5e5e5;
}

.footer_social_header b {
    font-size: 18px;
}

.footer_social_content {
    padding-top: 15px;
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 15px;
    color: #999;
}

.footer_social_content a {
    /*для того, чтобы ссылки выстроились в ряд, а не в колонку мишем display: inline-block;*/
    display: inline-block;
    vertical-align: middle;
    margin-left: 10px;
    font-size: 18px;
    color: #95e1d3;
}

.footer_title {
    margin: 30px 0;
    text-transform: uppercase;
    font-size: 14px;
    color: black;
}


/*Blogs*/

.blogs_item {
    display: flex;
    /*Выравниваем строки текста по центру относительно картинки*/
    align-items: center;
    margin-bottom: 30px;
}

.blogs_img {
    width: 120px;
    height: 80px;
}

.blogs_content {
    padding-left: 20px;
}

.blogs_title {
    line-height: 1.5;
    color: black;
    font-size: 12px;
    text-transform: uppercase;
    text-decoration: none;
    /*display: block; ставим для того, чтобы каждая строка текста в этом блоке была как бы отдельным объектом, размещаемым с новой строки, как это предполагается в display: block. Без этого line-height: 1.2; не сработает*/
    display: block;
    margin-bottom: 5px;
}

.blogs_title:hover {
    text-decoration: underline;
}

.blogs_date {
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 13px;
    color: #999;
}


/*Subscribe*/

.subscribe {
    width: 100%;
    max-width: 380px;
    display: flex;
}

.subscribe_input {
    /*задаем ширину инпута от элемента .subscribe */
    width: 60%;
    /*Декорируем элементы инпута*/
    padding: 12px;
    height: 40px;
    background: white;
    border: 1px solid #e7e7e7;
    /*инпут прилегает к кнопке справа, бордер там по сути не нужен*/
    border-right: 0;
    font-family: 'Roboto', sans-serif;
    font-style: italic;
    font-weight: 300;
    font-size: 15px;
    color: black;
    line-height: 1.1;
}

.subscribe_input:focus {
    /*при вводе в инпут отменяется бордер по умолчанию, прописаный в браузере, вместо этого возникает бордер цвета рядом стоящей кнопки*/
    outline: 0;
    border-color: #95e1d3;
}


/*плейсхолдер - это надпись-подсказка в окне инпут. Задаем ей стили.*/

.subscribe_input::placeholder {
    color: #ccc;
}

.subscribe_btn {
    /*задаем ширину инпута от элемента .subscribe */
    width: 40%;
    padding: 12px 30px;
    height: 40px;
    background-color: #95e1d3;
    font-family: 'Roboto', sans-serif;
    font-weight: 700;
    font-size: 14px;
    color: white;
    text-transform: uppercase;
    line-height: 1.1;
    /*убираем бордер*/
    border: 0;
    cursor: pointer;
    /*здесь прописываем плавность затеменения кнопки*/
    transition: background 0.2s linear;
}

.subscribe_btn:hover {
    /*при наведении кнопка затемняется.Цвет более темного оттенка подбираем в Фотошопе*/
    background-color: #74c7b8;
}


/*чтобы убрать аутлайны (т.е. бордер, проявляющийся при выделении при клике мыши на кнопку или окно инпута (прописано по умолчанию в браузере), делаем следующее*/

.subscribe_btn:focus {
    outline: 0;
}


/*Instagram*/

.instagram {
    display: flex;
    /*для того, чтобы картинки могли переносится, а не выстраиваться в одну строку но далее мы должны прописать ширину картинки в %, чтобы они выстраивались по 3 в ряд*/
    flex-wrap: wrap;
    justify-content: space-between;
}

.instagram_item {
    /*3 картинки таким образом выстроятся в строку 100%, остальные перенесутся 1% оставляем на промежуток между ними, который сделаем выше с помощью justify-content: space-between;*/
    width: 33%;
    border-bottom: 1px solid white;
}

.instagram_item img {
    /*чтобы не было отступов*/
    display: block;
    max-width: 100%;
    height: auto;
}


/*Copyrigt*/

.copyrigt {
    padding: 20px 0;
    border-top: 1px solid #e5e5e5;
    text-align: center;
    font-size: 14px;
    color: black;
}

.copyrigt span {
    color: #f38181;
}


/*Создаем медиазапросы для сайта. Можно размещать их как для всех стилей в конце CSS файла, либо в отдельном подключаемом файле, так и для каждого блока сайта, после прописаных стилей для этого блока.*/


/*Media*/

@media(max-width:1230px) {
    /*INTRO*/
    .intro_suptitle {
        font-size: 62px;
    }
    .intro_title {
        font-size: 120px;
    }
    /*REVIEWS*/
    .reviews_text {
        font-size: 20px;
    }
}

@media(max-width:990px) {
    /*INTRO*/
    .intro_suptitle {
        font-size: 32px;
    }
    .intro_title {
        font-size: 80px;
    }
    /*Stat*/
    .stat {
        justify-content: center;
    }
    .stat_item {
        /*Убираем флекс, поскольку нам не надо, чтобы картинки уменьшались вместе с уменьшением экрана, мы хотим, чтоб с 990рх они перескочили во второй ряд, поэтому прописываем им ширину в процентах*/
        flex: none;
        width: 33.3333%;
        border: 0;
        padding-top: 30px;
        padding-bottom: 30px;
    }
    .stat_item:last-child {
        border-right: 0;
    }
    /*SERVICES*/
    .services_item {
        width: 50%;
        padding-bottom: 0;
    }
    .services_item--border {
        border-bottom: 0;
    }
    /*REVIEWS*/
    .reviews {
        padding: 0 60px;
    }
    .services_photo {
        width: 100px;
        height: 100px;
    }
    .reviews_item {
        padding-left: 175px;
    }
    /*CLIENTS*/
    .clients {
        max-width: 600px;
        /*выравниваем этот блок по центру*/
        margin: 0 auto;
    }
    .clients_item {
        width: 100%;
        padding-right: 0;
    }
    .clients_item:last-child {
        margin-bottom: 0;
    }
    /*FOOTER*/
    .footer_col--first {
        /*делаем первую колонку шириной во весь экран, при этом остальные две перенесутся на следующую строку*/
        width: 100%;
    }
    .footer_col--second,
    .footer_col--third {
        /*делаем вторую и третью строку 50% и они займут эту строку вдвоем полностью*/
        width: 50%;
    }
    /*INSTAGRAM*/
    .instagram {
        /**/
        justify-content: flex-start;
    }
    .instagram_item {
        width: auto;
        border-right: 1px solid white;
    }
}

@media(max-width:770px) {
    /*HEADER*/
    .header {
        padding: 10px 0;
    }
    /*INTRO*/
    /*Это ширина планшета, мы хотим скрыть навигацию, чтобы сделать выпадающее меню на JS*/
    .nav {
        display: none;
        width: 100%;
        position: absolute;
        top: 100%;
        left: 0;
        background-color: #eb8b8d;
    }
    /*показываем это меню, если nav активный, т.е. в нашем случае нажата кнопка*/
    .nav.active {
        display: block;
    }
    .nav_link {
        display: block;
        margin: 0;
        padding: 8px 20px;
    }
    .nav_toggle {
        /*делаем видимым гамбургер при этой ширине экрана*/
        display: block;
    }
    /*Делаем высоту блока интро меньшей для планшетов*/
    .intro {
        min-height: 650px;
    }
    /*SLIDER*/
    .slider_text {
        display: none;
    }
    .slider_item.active:before {
        width: 50%;
    }
    /*SECTION*/
    .section {
        padding: 40px 0;
    }
    .section--devices {
        padding-bottom: 0;
    }
    /*CARD*/
    .card {
        margin-top: 50px;
        justify-content: center;
    }
    .card_item {
        width: 100%;
        /*прописываем ширину блока по ширине картинки 380пкс +2*15пкс паддинги, если этого не сделать то фон (градиент) вылезет за пределы картинки*/
        max-width: 410px;
        margin-bottom: 30px;
    }
    .card_item:last-child {
        margin-bottom: 0;
    }
    /*SERVICES*/
    .services {
        justify-content: center;
    }
    .services_item {
        width: 100%;
        max-width: 400px;
        padding-left: 55px;
        padding-right: 0;
    }
    .services_icon {
        left: 0;
    }
    /*WEDO*/
    /*На планшете мы скрываем картинку, а сам блок с текстом делаем на всю ширину экрана*/
    .wedo_img {
        display: none;
    }
    .wedo_item {
        width: 100%;
    }
    /*REVIEWS*/
    /* position: static; закрепляет фото, а текст (справа) уходит под фото*/
    .reviews_photo {
        position: static;
        /*ставим фото по центру*/
        margin: 50px auto;
    }
    .reviews_item {
        padding-left: 0;
    }
    /*WORKS*/
    .works {
        flex-wrap: wrap;
    }
    .works_col {
        flex: none;
        width: 50%;
    }
    /*BLOG*/
    .blog {
        /*ограничим ширину блока шириной картинки, тогда блок не будет растягиваться и за счет марджин ауто станет посредине экрана*/
        max-width: 380px;
        margin: 0 auto;
    }
    .blog_item {
        width: 100%;
        margin-bottom: 30px;
    }
    .blog_item:last-child {
        margin-bottom: 0;
    }
    /*FOOTER*/
    .footer_col--first {
        width: 100;
    }
    .footer_col--second {
        width: 100%;
    }
    .footer_col--third {
        width: 100%;
    }
}

@media(max-width:575px) {
    /*INTRO*/
    .intro_suptitle {
        font-size: 22px;
    }
    .intro_title {
        font-size: 40px;
    }
    /*SECTION*/
    .section_header {
        margin-bottom: 50px;
    }
    .section_suptitle {
        font-size: 20pxS;
    }
    .section_title {
        font-size: 24pxS;
    }
    .section_title:after {
        margin: 20px auto;
    }
    /*STAT*/
    .stat_item {
        /*делаем так, чтобы в мобильных картинки выстраивались друг под другом*/
        width: 100%;
        border-bottom: 1px solid #b5eae0;
    }
    .stat_item:last-child {
        border-bottom: none;
    }
    .stat_count {
        font-size: 52px;
    }
    /*DEVICES*/
    .devices {
        max-width: 320px;
    }
    .devices_item--iphone {
        width: 180px;
    }
    /*REVIEWS*/
    /*Для мобильных чтобы текст поместился*/
    .reviews {
        padding: 0;
    }
    .slick-arrow {
        top: 5%;
    }
    /*LOGOS*/
    /*большая часть данных манипуляций делалась из-за того, что размеры всех картинок блока отличаются*/
    .logos {
        flex-wrap: wrap;
        justify-content: center;
    }
    .logos_item {
        width: 50%;
        margin-bottom: 20px;
    }
    .logos_img {
        margin: 0 auto;
    }
    /*WORKS*/
    .works_col {
        width: 100%;
    }
    /*CLIENTS*/
    .clients_photo {
        /*если на большом экране (в главной верстке) у элемента стоит position:absolute, то чтобы на малых экранах текст перескакивал на строчку ниже фото, надо прописать position:static*/
        position: static;
    }
    .clients_item {
        /*таким образом, текст будет размещаться по всей ширине экрана*/
        padding-left: 0;
        text-align: center;
    }
    .clients_text:before {
        /**/
        margin: 15px auto;
    }
    /*SUBSCRIBE*/
    .subscribe {
        flex-wrap: wrap;
        max-width: none;
    }
    .subscribe_input {
        border-right: 1px solid #e7e7e7;
        margin-bottom: 10px;
    }
    .subscribe_input,
    .subscribe_btn {
        width: 100%;
    }
    /*BLOGS*/
    .blogs_img {
        width: 80px;
        height: 50px;
    }
    .blogs_title {
        font-size: 10px;
    }
}